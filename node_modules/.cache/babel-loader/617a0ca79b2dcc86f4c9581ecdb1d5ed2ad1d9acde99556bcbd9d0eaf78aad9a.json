{"ast":null,"code":"var _jsxFileName = \"/home/moringa/Development/code/bot-battlre/src/BotsPage.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport BotList from \"./BotList\";\nimport BotArmy from './BotArmy';\nimport BotSpecs from \"./BotSpecs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BotsPage() {\n  _s();\n  const [allBots, setAllBots] = useState([]);\n  const [selectBot, setSelectBot] = useState(undefined);\n  //   fetching my data which I stored in a dblClick.json file  \n\n  useEffect(() => {\n    fetch('http://localhost:3000/bots').then(res => res.json()).then(bots => {\n      const modifiedBots = bots.map(bot => ({\n        ...bot,\n        owned: false\n      }));\n      setAllBots(modifiedBots);\n    });\n  }, []);\n  const clearSpec = () => {\n    setSelectBot(undefined);\n  };\n  const clickBot = bot => {\n    setSelectBot(bot);\n  };\n  const addBot = selectedBot => {\n    const modifiedBots = allBots.map(bot => {\n      if (bot.id === selectedBot.id) {\n        return {\n          ...bot,\n          owned: !bot.owned\n        };\n      }\n      return bot;\n    });\n    setAllBots(modifiedBots);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(YourBotArmy, {\n      bots: allBots.filter(bot => bot.owned),\n      addBot: clickBot\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), selectBot ? /*#__PURE__*/_jsxDEV(BotSpecs, {\n      bot: selectBot,\n      clearSpec: clearSpec,\n      addBot: addBot\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(BotList, {\n      bots: allBots.filter(bot => !bot.owned),\n      addBot: clickBot\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(BotsPage, \"o9lBSIGDDqPUFW7Tx0WjEQwVJDc=\");\n_c = BotsPage;\nexport default BotsPage;\nvar _c;\n$RefreshReg$(_c, \"BotsPage\");","map":{"version":3,"names":["React","useState","useEffect","BotList","BotArmy","BotSpecs","jsxDEV","_jsxDEV","BotsPage","_s","allBots","setAllBots","selectBot","setSelectBot","undefined","fetch","then","res","json","bots","modifiedBots","map","bot","owned","clearSpec","clickBot","addBot","selectedBot","id","children","YourBotArmy","filter","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/moringa/Development/code/bot-battlre/src/BotsPage.js"],"sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport BotList from \"./BotList\";\nimport BotArmy from './BotArmy'\nimport BotSpecs from \"./BotSpecs\";\n\nfunction BotsPage() {\n  const [allBots, setAllBots] = useState([]);\n  const [selectBot, setSelectBot] = useState(undefined);\n//   fetching my data which I stored in a dblClick.json file  \n\n  useEffect(() => {\n    fetch('http://localhost:3000/bots')\n      .then(res => res.json())\n      .then(bots => {\n        const modifiedBots = bots.map(bot => ({ ...bot, owned: false }));\n        setAllBots(modifiedBots);\n      });\n  }, []);\n\n  const clearSpec = () => {\n    setSelectBot(undefined);\n  };\n\n  const clickBot = (bot) => {\n    setSelectBot(bot);\n  };\n\n  const addBot = (selectedBot) => {\n    const modifiedBots = allBots.map(bot => {\n      if (bot.id === selectedBot.id) {\n        return { ...bot, owned: !bot.owned };\n      }\n      return bot;\n    });\n    setAllBots(modifiedBots);\n  };\n\n  return (\n    <div>\n      <YourBotArmy bots={allBots.filter(bot => bot.owned)} addBot={clickBot} />\n      <br />\n      {selectBot ?\n        <BotSpecs bot={selectBot} clearSpec={clearSpec} addBot={addBot} /> :\n        <BotList bots={allBots.filter(bot => !bot.owned)} addBot={clickBot} />}\n    </div>\n  );\n}\n\nexport default BotsPage;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAACa,SAAS,CAAC;EACvD;;EAEEZ,SAAS,CAAC,MAAM;IACda,KAAK,CAAC,4BAA4B,CAAC,CAChCC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAI;MACZ,MAAMC,YAAY,GAAGD,IAAI,CAACE,GAAG,CAACC,GAAG,KAAK;QAAE,GAAGA,GAAG;QAAEC,KAAK,EAAE;MAAM,CAAC,CAAC,CAAC;MAChEZ,UAAU,CAACS,YAAY,CAAC;IAC1B,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,SAAS,GAAGA,CAAA,KAAM;IACtBX,YAAY,CAACC,SAAS,CAAC;EACzB,CAAC;EAED,MAAMW,QAAQ,GAAIH,GAAG,IAAK;IACxBT,YAAY,CAACS,GAAG,CAAC;EACnB,CAAC;EAED,MAAMI,MAAM,GAAIC,WAAW,IAAK;IAC9B,MAAMP,YAAY,GAAGV,OAAO,CAACW,GAAG,CAACC,GAAG,IAAI;MACtC,IAAIA,GAAG,CAACM,EAAE,KAAKD,WAAW,CAACC,EAAE,EAAE;QAC7B,OAAO;UAAE,GAAGN,GAAG;UAAEC,KAAK,EAAE,CAACD,GAAG,CAACC;QAAM,CAAC;MACtC;MACA,OAAOD,GAAG;IACZ,CAAC,CAAC;IACFX,UAAU,CAACS,YAAY,CAAC;EAC1B,CAAC;EAED,oBACEb,OAAA;IAAAsB,QAAA,gBACEtB,OAAA,CAACuB,WAAW;MAACX,IAAI,EAAET,OAAO,CAACqB,MAAM,CAACT,GAAG,IAAIA,GAAG,CAACC,KAAK,CAAE;MAACG,MAAM,EAAED;IAAS;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACzE5B,OAAA;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EACLvB,SAAS,gBACRL,OAAA,CAACF,QAAQ;MAACiB,GAAG,EAAEV,SAAU;MAACY,SAAS,EAAEA,SAAU;MAACE,MAAM,EAAEA;IAAO;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAClE5B,OAAA,CAACJ,OAAO;MAACgB,IAAI,EAAET,OAAO,CAACqB,MAAM,CAACT,GAAG,IAAI,CAACA,GAAG,CAACC,KAAK,CAAE;MAACG,MAAM,EAAED;IAAS;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrE,CAAC;AAEV;AAAC1B,EAAA,CAzCQD,QAAQ;AAAA4B,EAAA,GAAR5B,QAAQ;AA2CjB,eAAeA,QAAQ;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}