{"ast":null,"code":"var _jsxFileName = \"/home/moringa/Development/code/bot-battlre/src/BotsPage.js\";\nimport React, { Component } from \"react\";\nimport BotSpecs from \"./BotSpecs\";\nimport YourBotArmy from \"./YourBotArmy\";\nimport Botcollection from \"./BotCollection\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass BotsPage extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      botCollection: [],\n      filteredCollection: [],\n      botArmy: [],\n      collectionVisible: true,\n      botSpecs: {}\n    };\n    this.addToArmy = bot => {\n      const newCollection = this.state.filteredCollection.filter(card => card.bot_class !== bot.bot_class);\n      this.setState({\n        filteredCollection: newCollection,\n        botArmy: [...this.state.botArmy, bot],\n        collectionVisible: true\n      });\n    };\n    this.removeFromArmy = bot => {\n      const newArmy = this.state.botArmy.filter(card => card.id !== bot.id);\n      const armyClasses = newArmy.map(bot => bot.bot_class);\n      const newCollection = this.state.botCollection.filter(bot => {\n        console.log(\"Filter:\", !armyClasses.includes(bot.bot_class));\n        return !armyClasses.includes(bot.bot_class);\n      });\n      console.log(\"newCollection\", newCollection);\n      this.setState({\n        botArmy: newArmy,\n        filteredCollection: newCollection\n      });\n    };\n    this.removeBotPermanently = bot => {\n      let newCollection = this.state.botCollection.filter(card => card !== bot);\n      let newFilteredCollection = this.state.filteredCollection.filter(card => card !== bot);\n      let newArmy = this.state.botArmy.filter(card => card !== bot);\n      this.setState({\n        botCollection: newCollection,\n        filteredCollection: newFilteredCollection,\n        botArmy: newArmy\n      });\n      fetch('http://localhost:8001/bots/${bot.id}', {\n        method: 'DELETE'\n      }).then(response => response.json()).then(result => console.log(result));\n    };\n    this.displayBotSpecs = bot => {\n      this.setState({\n        collectionVisible: false,\n        botSpecs: bot\n      });\n    };\n    this.displayBotCollection = () => {\n      this.setState({\n        collectionVisible: true\n      });\n    };\n  }\n  componentDidMount() {\n    fetch('http://localhost:8001/bots').then(response => response.json()).then(bots => {\n      this.setState({\n        botCollection: bots,\n        filteredCollection: bots\n      });\n      console.log(\"Bots Fetched!\");\n    }).catch(error => console.error(error));\n  }\n  render() {\n    const {\n      filteredCollection,\n      botArmy,\n      botSpecs,\n      collectionVisible\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(YourBotArmy, {\n        bots: botArmy,\n        action: this.removeFromArmy,\n        removeCard: this.removeBotPermanently\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), collectionVisible ? /*#__PURE__*/_jsxDEV(Botcollection, {\n        botCollection: filteredCollection,\n        action: this.displayBotSpecs,\n        removeCard: this.removeBotPermanently\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(BotSpecs, {\n        bot: botSpecs,\n        back: this.displayBotCollection,\n        enlist: this.addToArmy\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default BotsPage;","map":{"version":3,"names":["React","Component","BotSpecs","YourBotArmy","Botcollection","jsxDEV","_jsxDEV","BotsPage","constructor","arguments","state","botCollection","filteredCollection","botArmy","collectionVisible","botSpecs","addToArmy","bot","newCollection","filter","card","bot_class","setState","removeFromArmy","newArmy","id","armyClasses","map","console","log","includes","removeBotPermanently","newFilteredCollection","fetch","method","then","response","json","result","displayBotSpecs","displayBotCollection","componentDidMount","bots","catch","error","render","children","action","removeCard","fileName","_jsxFileName","lineNumber","columnNumber","back","enlist"],"sources":["/home/moringa/Development/code/bot-battlre/src/BotsPage.js"],"sourcesContent":["import React, { Component } from \"react\"\nimport BotSpecs from \"./BotSpecs\"\nimport YourBotArmy from \"./YourBotArmy\"\nimport Botcollection from \"./BotCollection\"\n\nclass BotsPage extends Component {\n  state = {\n    botCollection: [],\n    filteredCollection: [],\n    botArmy: [],\n    collectionVisible: true,\n    botSpecs: {},\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:8001/bots')\n      .then(response => response.json())\n      .then(bots => {\n        this.setState({ botCollection: bots, filteredCollection: bots });\n        console.log(\"Bots Fetched!\");\n      })\n      .catch(error => console.error(error));\n\n  }\n\n  addToArmy = (bot) => {\n    const newCollection = this.state.filteredCollection.filter(card => card.bot_class !== bot.bot_class)\n    this.setState({\n      filteredCollection: newCollection,\n      botArmy: [...this.state.botArmy, bot],\n      collectionVisible: true,\n    })\n  }\n\n  removeFromArmy = (bot) => {\n    const newArmy = this.state.botArmy.filter(card => card.id !== bot.id)\n    const armyClasses = newArmy.map(bot => bot.bot_class)\n    const newCollection = this.state.botCollection.filter(bot => {\n      console.log(\"Filter:\", !armyClasses.includes(bot.bot_class))\n      return !armyClasses.includes(bot.bot_class)\n    })\n    console.log(\"newCollection\", newCollection)\n\n    this.setState({ botArmy: newArmy, filteredCollection: newCollection })\n  }\n\n  removeBotPermanently = (bot) => {\n    let newCollection = this.state.botCollection.filter(card => card !== bot)\n    let newFilteredCollection = this.state.filteredCollection.filter(card => card !== bot)\n    let newArmy = this.state.botArmy.filter(card => card !== bot)\n\n    this.setState({ botCollection: newCollection, filteredCollection: newFilteredCollection, botArmy: newArmy })\n\n    fetch('http://localhost:8001/bots/${bot.id}', {\n      method: 'DELETE'\n    }).then(response => response.json())\n      .then(result => console.log(result))\n  }\n\n  displayBotSpecs = (bot) => {\n    this.setState({ collectionVisible: false, botSpecs: bot })\n  }\n\n  displayBotCollection = () => {\n    this.setState({ collectionVisible: true })\n  }\n\n  render() {\n    const { filteredCollection, botArmy, botSpecs, collectionVisible } = this.state\n\n    return (\n      <div>\n        <YourBotArmy\n          bots={botArmy}\n          action={this.removeFromArmy}\n          removeCard={this.removeBotPermanently} />\n        {collectionVisible\n          ? < Botcollection\n            botCollection={filteredCollection}\n            action={this.displayBotSpecs}\n            removeCard={this.removeBotPermanently} />\n          : < BotSpecs\n            bot={botSpecs}\n            back={this.displayBotCollection}\n            enlist={this.addToArmy} />\n        }\n      </div>\n    )\n  }\n}\n\nexport default BotsPage;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}