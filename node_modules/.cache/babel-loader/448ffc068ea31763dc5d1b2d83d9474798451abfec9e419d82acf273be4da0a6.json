{"ast":null,"code":"var _jsxFileName = \"/home/moringa/Development/code/bot-battlre/src/BotsPage.js\",\n  _s = $RefreshSig$();\n// \n// import React, { useState, useEffect } from \"react\";\n// //import BotDetail from \"./BotDetail\"\n// import BotArmy from \"./BotArmy\";\n\n// function BotsPage() {\n//   const [bots, setBots] = useState([]);\n//   const [army, setArmy] = useState([]);\n\n//   useEffect(() => {\n//     fetch(\"http://localhost:6001/bots\")\n//       .then((r) => r.json())\n//       .then((bots) => setBots(bots));\n//   }, []);\n\n//   const addBotToArmy = (bot) => {\n//     if (!army.includes(bot)) {\n//       setArmy([...army, bot]);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h1>Available Bots</h1>\n//       {bots.map((bot) => (\n//         <article className=\"card\" key={bot.id}>\n//           <div className=\"card-image\">\n//             <img src={bot.avatar_url} alt={bot.name} />\n//           </div>\n//           <div className=\"card-content\">\n//             <div className=\"card-body\">\n//               <p>{bot.name}</p>\n//               <p>{bot.health}</p>\n//               <p>{bot.damage}</p>\n//               <p>{bot.armour}</p>\n//               <p>{bot.bot_class}</p>\n//               <p>{bot.catchphrase}</p>\n//               <p>{bot.created_at}</p>\n//               <p>{bot.updated_at}</p>\n//               <button onClick={() => addBotToArmy(bot)}>Add to Army</button>\n//             </div>\n//           </div>\n//         </article>\n//       ))}\n//       <BotArmy bots={army} />\n//     </div>\n//   );\n// }\n\n// export default BotsPage;\nimport React, { useState, useEffect } from 'react';\nimport BotArmy from \"./\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BotsPage() {\n  _s();\n  const [bots, setBots] = useState([]);\n  useEffect(() => {\n    async function fetchBots() {\n      try {\n        const response = await fetch('http://localhost:6001/bots');\n        const data = await response.json();\n        setBots(data);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    fetchBots();\n  }, []);\n  async function addBot(newBot) {\n    try {\n      const response = await fetch('http://localhost:6001/bots', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newBot)\n      });\n      const data = await response.json();\n      setBots(bots => [...bots, data]);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n  async function deleteBot(id) {\n    try {\n      await fetch(`http://localhost:6001/bots/${id}`, {\n        method: 'DELETE'\n      });\n      setBots(bots => bots.filter(bot => bot.id !== id));\n    } catch (error) {\n      console.error(error);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Bots\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: bots.map(bot => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [bot.name, \" (\", bot.type, \")\", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteBot(bot.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)]\n      }, bot.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: event => {\n        event.preventDefault();\n        const form = event.target;\n        const name = form.name.value;\n        const type = form.type.value;\n        addBot({\n          name,\n          type\n        });\n        form.reset();\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Type:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"type\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Bot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n_s(BotsPage, \"HLWYdwhjlsHzdjlYtqtFyxxPKrE=\");\n_c = BotsPage;\nexport default BotsPage;\nvar _c;\n$RefreshReg$(_c, \"BotsPage\");","map":{"version":3,"names":["React","useState","useEffect","BotArmy","jsxDEV","_jsxDEV","BotsPage","_s","bots","setBots","fetchBots","response","fetch","data","json","error","console","addBot","newBot","method","headers","body","JSON","stringify","deleteBot","id","filter","bot","children","fileName","_jsxFileName","lineNumber","columnNumber","map","name","type","onClick","onSubmit","event","preventDefault","form","target","value","reset","required","_c","$RefreshReg$"],"sources":["/home/moringa/Development/code/bot-battlre/src/BotsPage.js"],"sourcesContent":["// \n// import React, { useState, useEffect } from \"react\";\n// //import BotDetail from \"./BotDetail\"\n// import BotArmy from \"./BotArmy\";\n\n// function BotsPage() {\n//   const [bots, setBots] = useState([]);\n//   const [army, setArmy] = useState([]);\n\n//   useEffect(() => {\n//     fetch(\"http://localhost:6001/bots\")\n//       .then((r) => r.json())\n//       .then((bots) => setBots(bots));\n//   }, []);\n\n//   const addBotToArmy = (bot) => {\n//     if (!army.includes(bot)) {\n//       setArmy([...army, bot]);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h1>Available Bots</h1>\n//       {bots.map((bot) => (\n//         <article className=\"card\" key={bot.id}>\n//           <div className=\"card-image\">\n//             <img src={bot.avatar_url} alt={bot.name} />\n//           </div>\n//           <div className=\"card-content\">\n//             <div className=\"card-body\">\n//               <p>{bot.name}</p>\n//               <p>{bot.health}</p>\n//               <p>{bot.damage}</p>\n//               <p>{bot.armour}</p>\n//               <p>{bot.bot_class}</p>\n//               <p>{bot.catchphrase}</p>\n//               <p>{bot.created_at}</p>\n//               <p>{bot.updated_at}</p>\n//               <button onClick={() => addBotToArmy(bot)}>Add to Army</button>\n//             </div>\n//           </div>\n//         </article>\n//       ))}\n//       <BotArmy bots={army} />\n//     </div>\n//   );\n// }\n\n// export default BotsPage;\nimport React, { useState, useEffect } from 'react';\nimport BotArmy from \"./\"\n\nfunction BotsPage() {\n  const [bots, setBots] = useState([]);\n\n  useEffect(() => {\n    async function fetchBots() {\n      try {\n        const response = await fetch('http://localhost:6001/bots');\n        const data = await response.json();\n        setBots(data);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    fetchBots();\n  }, []);\n\n  async function addBot(newBot) {\n    try {\n      const response = await fetch('http://localhost:6001/bots', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newBot)\n      });\n      const data = await response.json();\n      setBots(bots => [...bots, data]);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  async function deleteBot(id) {\n    try {\n      await fetch(`http://localhost:6001/bots/${id}`, { method: 'DELETE' });\n      setBots(bots => bots.filter(bot => bot.id !== id));\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  return (\n    <div>\n      <h1>Bots</h1>\n      <ul>\n        {bots.map(bot => (\n          <li key={bot.id}>\n            {bot.name} ({bot.type})\n            <button onClick={() => deleteBot(bot.id)}>Delete</button>\n          </li>\n        ))}\n      </ul>\n      <form\n        onSubmit={event => {\n          event.preventDefault();\n          const form = event.target;\n          const name = form.name.value;\n          const type = form.type.value;\n          addBot({ name, type });\n          form.reset();\n        }}\n      >\n        <label>\n          Name:\n          <input type=\"text\" name=\"name\" required />\n        </label>\n        <label>\n          Type:\n          <input type=\"text\" name=\"type\" required />\n        </label>\n        <button type=\"submit\">Add Bot</button>\n      </form>\n    </div>\n  );\n}\n\nexport default BotsPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}